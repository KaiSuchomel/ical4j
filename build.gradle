buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:1.1.3'
    }
}

plugins {
    id 'maven-publish'
    id 'signing'
    id "nebula.provided-base" version "3.0.3"
    id 'pl.allegro.tech.build.axion-release' version '1.8.1'
}

apply plugin: 'java-library'
apply plugin: 'groovy'
apply plugin: 'osgi'
apply plugin: 'jacoco'
apply plugin: 'nebula.optional-base'
apply from: 'gradle/dist.gradle'

group = 'org.mnode.ical4j'
description = '''
A Java library for reading and writing iCalendar (*.ics) files
'''

sourceCompatibility = 1.7
targetCompatibility = 1.7

ext {
    slf4jVersion = '1.7.25'
    groovyVersion = '2.5.4'
}

/*
githubPages {
//    repoUri = 'https://github.com/ical4j/ical4j.github.io.git'
    repoUri = 'git@github.com:ical4j/ical4j.github.io.git'
    pages {
        from javadoc.outputs.files
    }
}
*/
/*
github {
    /* Wiki repo will be calculated from this. *
    repo = 'git@github.com:ical4j/ical4j.git'

    wiki {
        /*
        This is the same as used in Gradle Copy Task.
        Please refer to Gradle documentation for information.
        *
        from javadoc.outputs.files {
            into 'ical4j/javadoc'
        }
        into { "javadoc/$project.release.version" }
    }
}
*/

repositories {
    mavenCentral()
}

dependencies {
    api "org.slf4j:slf4j-api:$slf4jVersion",
            'commons-codec:commons-codec:1.11',
            'org.apache.commons:commons-lang3:3.8.1',
            'org.apache.commons:commons-collections4:4.1',
			'org.threeten:threetenbp:1.3.6'
    
    compile 'javax.cache:cache-api:1.0.0', optional
    compile "org.codehaus.groovy:groovy-all:$groovyVersion", optional
    implementation "org.codehaus.groovy:groovy-dateutil:$groovyVersion", optional

    compileOnly 'biz.aQute.bnd:bndlib:2.3.0'

    testImplementation 'org.codehaus.groovy:groovy-all:2.3.2',
        'org.spockframework:spock-core:0.7-groovy-2.0',
        'commons-io:commons-io:2.4',
        'org.ccil.cowan.tagsoup:tagsoup:1.2.1',
        "org.slf4j:slf4j-log4j12:$slf4jVersion",
        'org.ehcache:ehcache:3.4.0'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

javadoc {
    if (JavaVersion.current().isJava8Compatible()) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

jar {
    manifest {
        instruction 'Import-Package', 'groovy.*;resolution:=optional, org.codehaus.groovy*;resolution:=optional, *'
    }
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

scmVersion {
    tag {
        prefix = 'ical4j'
        branchPrefix = [
            'ical4j-1.x-maintenance' : 'jdk14_ical4j'
        ]
        branchPrefix = [
            'ical4j-2.x-maintenance' : 'jdk7_ical4j'
        ]
    }
    versionCreator 'versionWithBranch'
    branchVersionCreator = [
        'master': 'simple'
    ]
    branchVersionCreator = [
        'ical4j-1.x-maintenance': 'simple'
    ]
    branchVersionCreator = [
        'ical4j-2.x-maintenance': 'simple'
    ]
}
version = scmVersion.version

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

publishing {
    publications {
        mavenArtifacts(MavenPublication) {
            from components.java
            artifact javadocJar
            artifact sourcesJar
            pom.withXml {
                asNode().appendNode('name', project.name)
                asNode().appendNode('description', project.description)
                asNode().appendNode('url', 'http://ical4j.github.io')

                def scmNode = asNode().appendNode('scm')
                scmNode.appendNode('url', 'https://github.com/ical4j/ical4j')
                scmNode.appendNode('connection', 'scm:git@github.com:ical4j/ical4j.git')
                scmNode.appendNode('developerConnection', 'scm:git@github.com:ical4j/ical4j.git')

                def licenseNode = asNode().appendNode('licenses').appendNode('license')
                licenseNode.appendNode('name', 'iCal4j - License')
                licenseNode.appendNode('url', 'https://raw.githubusercontent.com/ical4j/ical4j/master/LICENSE')
                licenseNode.appendNode('distribution', 'repo')

                def developerNode = asNode().appendNode('developers').appendNode('developer')
                developerNode.appendNode('id', 'fortuna')
                developerNode.appendNode('name', 'Ben Fortuna')
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = !isReleaseVersion ? "https://oss.sonatype.org/content/repositories/snapshots/" : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

signing {
    afterEvaluate {
        required { isReleaseVersion }
        sign publishing.publications.mavenArtifacts
    }
}
